{
  "contractName": "CrossChainEnabledArbitrumL2",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://arbitrum.io/[Arbitrum] specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/@openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":\"CrossChainEnabledArbitrumL2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"project:/contracts/@openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":{\"keccak256\":\"0x0637ccf571412cbf004be075095c048161855b295495a74e1d48460cd08c3296\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16230e6cda18bcf50c6db29a0a519e678b51089e0620d504ef29806164f2298a\",\"dweb:/ipfs/QmWe6pGZ4Gdb8LZP4sYnasYAYq2F4UQiCZDRD9635Aivnr\"]},\"project:/contracts/@openzeppelin/contracts/crosschain/arbitrum/LibArbitrumL2.sol\":{\"keccak256\":\"0x95505885405b84bce7a8d6c0f6e6b0716ca2c56ad234901df913dbf4dd4e9099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dea4668367ea06b5960ab161df9549e2ad19c7f9eab4bc160adc82e7657c7213\",\"dweb:/ipfs/QmaBvxwQGV4RxwHgkSmEzr1Q2sgnnoJzwGX8k9PzDm7f9w\"]},\"project:/contracts/@openzeppelin/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"project:/contracts/@openzeppelin/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0x5771b4977f37342f1a5bf6495a8418b478583836f9362fcbbf055d77bb620ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cfc6c57583b11feaf377863ce8f95eb2674c63dca009d8cbee467707a611aa8\",\"dweb:/ipfs/QmeeQLjwWtnpEfXqhGgTs4cnLp2cKAxAH2CfkizGoAzABE\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol)\n\npragma solidity ^0.8.4;\n\nimport \"../CrossChainEnabled.sol\";\nimport \"./LibArbitrumL2.sol\";\n\n/**\n * @dev https://arbitrum.io/[Arbitrum] specialization or the\n * {CrossChainEnabled} abstraction the L2 side (arbitrum).\n *\n * This version should only be deployed on L2 to process cross-chain messages\n * originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n *\n * Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n * this specialization of {CrossChainEnabled} does not include a constructor.\n *\n * _Available since v4.6._\n */\nabstract contract CrossChainEnabledArbitrumL2 is CrossChainEnabled {\n    /**\n     * @dev see {CrossChainEnabled-_isCrossChain}\n     */\n    function _isCrossChain() internal view virtual override returns (bool) {\n        return LibArbitrumL2.isCrossChain(LibArbitrumL2.ARBSYS);\n    }\n\n    /**\n     * @dev see {CrossChainEnabled-_crossChainSender}\n     */\n    function _crossChainSender() internal view virtual override onlyCrossChain returns (address) {\n        return LibArbitrumL2.crossChainSender(LibArbitrumL2.ARBSYS);\n    }\n}\n",
  "sourcePath": "/Users/marciovieira/Desktop/__/CA_Blockchain/DCU_MKT_PLC/contracts/@openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
  "ast": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
    "exportedSymbols": {
      "ArbitrumL2_Bridge": [
        3120
      ],
      "CrossChainEnabled": [
        801
      ],
      "CrossChainEnabledArbitrumL2": [
        983
      ],
      "InvalidCrossChainSender": [
        1107
      ],
      "LibArbitrumL2": [
        1097
      ],
      "NotCrossChainCall": [
        1101
      ]
    },
    "id": 984,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 947,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "135:23:159"
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol",
        "file": "../CrossChainEnabled.sol",
        "id": 948,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 984,
        "sourceUnit": 802,
        "src": "160:34:159",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "file": "./LibArbitrumL2.sol",
        "id": 949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 984,
        "sourceUnit": 1098,
        "src": "195:29:159",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 951,
              "name": "CrossChainEnabled",
              "nameLocations": [
                "751:17:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 801,
              "src": "751:17:159"
            },
            "id": 952,
            "nodeType": "InheritanceSpecifier",
            "src": "751:17:159"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 950,
          "nodeType": "StructuredDocumentation",
          "src": "226:475:159",
          "text": " @dev https://arbitrum.io/[Arbitrum] specialization or the\n {CrossChainEnabled} abstraction the L2 side (arbitrum).\n This version should only be deployed on L2 to process cross-chain messages\n originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n this specialization of {CrossChainEnabled} does not include a constructor.\n _Available since v4.6._"
        },
        "fullyImplemented": true,
        "id": 983,
        "linearizedBaseContracts": [
          983,
          801
        ],
        "name": "CrossChainEnabledArbitrumL2",
        "nameLocation": "720:27:159",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              794
            ],
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "912:72:159",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 961,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1097,
                          "src": "956:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$1097_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "970:6:159",
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1059,
                        "src": "956:20:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 959,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1097,
                        "src": "929:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$1097_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "943:12:159",
                      "memberName": "isCrossChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "929:26:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:48:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 958,
                  "id": 964,
                  "nodeType": "Return",
                  "src": "922:55:159"
                }
              ]
            },
            "documentation": {
              "id": 953,
              "nodeType": "StructuredDocumentation",
              "src": "775:61:159",
              "text": " @dev see {CrossChainEnabled-_isCrossChain}"
            },
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCrossChain",
            "nameLocation": "850:13:159",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "888:8:159"
            },
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:2:159"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "906:4:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:4:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:6:159"
            },
            "scope": 983,
            "src": "841:143:159",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              800
            ],
            "body": {
              "id": 981,
              "nodeType": "Block",
              "src": "1153:76:159",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 977,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1097,
                          "src": "1201:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$1097_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1215:6:159",
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1059,
                        "src": "1201:20:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 975,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1097,
                        "src": "1170:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$1097_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1184:16:159",
                      "memberName": "crossChainSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1096,
                      "src": "1170:30:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:52:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 974,
                  "id": 980,
                  "nodeType": "Return",
                  "src": "1163:59:159"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "990:65:159",
              "text": " @dev see {CrossChainEnabled-_crossChainSender}"
            },
            "id": 982,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 970,
                  "name": "onlyCrossChain",
                  "nameLocations": [
                    "1120:14:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 767,
                  "src": "1120:14:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:14:159"
              }
            ],
            "name": "_crossChainSender",
            "nameLocation": "1069:17:159",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 969,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1111:8:159"
            },
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:159"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 982,
                  "src": "1144:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1143:9:159"
            },
            "scope": 983,
            "src": "1060:169:159",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 984,
        "src": "702:529:159",
        "usedErrors": []
      }
    ],
    "src": "135:1097:159"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-03-10T11:33:37.451Z",
  "devdoc": {
    "details": "https://arbitrum.io/[Arbitrum] specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}